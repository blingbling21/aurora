# Aurora 配置文件示例 - 完整配置
# 
# 本配置文件展示了所有可用的配置选项
# 同时包含回测和实时交易配置

# ==================== 数据源配置 ====================
[data_source]
# 数据提供商名称
# 支持: "binance", "okx" 等
# 默认值: "binance"
provider = "binance"

# API密钥 (可选)
# 用于访问需要认证的API端点
# 如果不需要私有数据,可以不设置
api_key = "your_api_key_here"

# API密钥 (可选)
# 与api_key配对使用
# 用于API请求签名
api_secret = "your_api_secret_here"

# 基础URL (可选)
# REST API的基础地址
# 如不设置,使用提供商的默认地址
base_url = "https://api.binance.com"

# WebSocket URL (可选)
# 用于实时数据流连接
# 如不设置,使用提供商的默认地址
ws_url = "wss://stream.binance.com:9443"

# 连接超时时间(秒)
# API请求的超时限制
# 默认值: 30
timeout = 60

# 最大重试次数
# 网络请求失败时的重试次数
# 默认值: 3
max_retries = 5

# ==================== 策略配置 ====================
# 可以配置多个策略,但实际运行时只会使用第一个启用(enabled=true)的策略
# 使用 [[strategies]] 语法定义数组元素

# ===== 策略1: MA快速交叉 =====
[[strategies]]
# 策略名称 (必需)
# 用于标识和日志输出
name = "MA快速交叉"

# 策略类型 (必需)
# 决定使用哪种策略实现
# 当前支持: "ma-crossover"
strategy_type = "ma-crossover"

# 是否启用该策略
# true: 该策略会被使用
# false: 该策略被忽略
# 默认值: true
enabled = true

# 策略参数
# 不同策略类型需要不同的参数
# 对于MA交叉策略,需要short和long参数
[strategies.parameters]
# 短期均线周期
# 较小的值对价格变化更敏感
short = 5

# 长期均线周期
# 较大的值更平滑,适合判断趋势
long = 15

# ===== 策略2: MA标准交叉 (备用) =====
[[strategies]]
# 策略名称
name = "MA标准交叉"

# 策略类型
strategy_type = "ma-crossover"

# 该策略被禁用,不会运行
enabled = false

# 策略参数
[strategies.parameters]
# 标准参数配置
short = 10
long = 30

# ===== 策略3: MA慢速交叉 (备用) =====
[[strategies]]
# 策略名称
name = "MA慢速交叉"

# 策略类型
strategy_type = "ma-crossover"

# 该策略被禁用,不会运行
enabled = false

# 策略参数
[strategies.parameters]
# 慢速参数,适合长期趋势
short = 20
long = 60

# ==================== 投资组合配置 ====================
[portfolio]
# 初始资金 (必需)
# 回测或模拟交易的起始资金量
# 必须大于0
# 默认值: 10000.0
initial_cash = 50000.0

# 手续费率
# 每笔交易的手续费比例
# 0.001 表示 0.1% (千分之一)
# 范围: [0, 1)
# 默认值: 0.001
commission = 0.001

# 滑点率
# 实际成交价格与预期价格的偏差比例
# 0.0005 表示 0.05% (万分之五)
# 用于模拟真实交易中的价格滑移
# 范围: [0, 1)
# 默认值: 0.0
slippage = 0.0005

# 单笔最大持仓金额 (可选)
# 限制单次交易的最大金额
# 用于风险控制
# 如不设置则无限制
max_position_size = 10000.0

# 最大持仓数量 (可选)
# 限制同时持有的仓位数量
# 用于分散风险
# 如不设置则无限制
max_positions = 5

# --- 风险管理配置 (可选) ---
# 提供投资组合级别的风险控制
# 如果不设置,则不启用风险控制
[portfolio.risk_rules]
# 最大回撤限制 (百分比)
# 当回撤达到此值时自动停止交易
# 例如: 15.0 表示最大允许回撤15%
# 范围: [0, 100]
max_drawdown_pct = 15.0

# 单日最大亏损限制 (百分比)
# 防止单日损失过大
# 例如: 5.0 表示单日最大亏损5%
# 范围: [0, 100]
max_daily_loss_pct = 5.0

# 连续亏损次数限制
# 连续亏损达到此次数时停止交易
# 避免在不利市场中持续损失
# 例如: 3 表示连续亏损3次后停止
max_consecutive_losses = 3

# 单笔交易最大亏损限制 (百分比)
# 限制单笔交易的风险敞口
# 例如: 3.0 表示单笔最大亏损3%
max_single_trade_loss_pct = 3.0

# 账户最低权益要求
# 当账户权益低于此值时停止交易
# 例如: 5000.0 表示账户权益不能低于5000
min_equity = 5000.0

# 止损百分比 (相对于入场价)
# 价格跌破此百分比时自动止损
# 例如: 2.0 表示价格跌2%时止损
# 范围: [0, 100]
stop_loss_pct = 2.0

# 止盈百分比 (相对于入场价)
# 价格涨至此百分比时自动止盈
# 例如: 5.0 表示价格涨5%时止盈
# 范围: (0, ∞)
take_profit_pct = 5.0

# --- 仓位管理配置 (可选) ---
# 控制每次交易使用多少资金
# 如果不设置,默认使用全仓策略 (不推荐)

# 策略1: 固定比例策略 (推荐用于初学者)
# 每次交易使用账户权益的固定比例
[portfolio.position_sizing]
strategy_type = "fixed_percentage"
# 使用账户权益的20%
# 范围: (0, 1.0]
percentage = 0.2

# 策略2: Kelly准则策略 (适合有历史数据支持的策略)
# 根据胜率和盈亏比动态调整仓位
# [portfolio.position_sizing]
# strategy_type = "kelly_criterion"
# win_rate = 0.6              # 历史胜率60%
# profit_loss_ratio = 2.0     # 平均盈利/平均亏损 = 2:1
# kelly_fraction = 0.5        # 使用半凯利(更保守)

# 策略3: 金字塔加仓策略 (适合趋势交易)
# 在盈利时逐步增加仓位
# [portfolio.position_sizing]
# strategy_type = "pyramid"
# initial_percentage = 0.1    # 初始建仓10%
# profit_threshold = 5.0      # 盈利5%时触发加仓
# max_percentage = 0.5        # 最大仓位50%
# increment = 0.1             # 每次加仓10%

# 策略4: 固定金额策略
# 每次交易使用固定金额
# [portfolio.position_sizing]
# strategy_type = "fixed_amount"
# amount = 1000.0             # 每次使用1000元

# 策略5: 全仓策略 (高风险,不推荐)
# 使用所有可用资金
# [portfolio.position_sizing]
# strategy_type = "all_in"

# ==================== 日志配置 ====================
[logging]
# 日志级别
# 控制日志输出的详细程度
# 可选值:
#   - "trace": 最详细,包含所有调试信息
#   - "debug": 调试信息,用于开发和问题诊断
#   - "info":  一般信息,推荐日常使用
#   - "warn":  警告信息,只显示潜在问题
#   - "error": 错误信息,只显示严重问题
# 默认值: "info"
level = "debug"

# 日志格式
# 控制日志输出的格式
# 可选值:
#   - "json":   JSON格式,便于机器解析和日志分析工具处理
#   - "pretty": 人类可读格式,便于直接查看
# 默认值: "pretty"
format = "json"

# 日志输出文件 (可选)
# 指定日志文件的保存路径
# 如不设置,日志将输出到标准输出(stdout)
# 可以是相对路径或绝对路径
output = "aurora.log"

# ==================== 回测配置 ====================
# 只在使用 aurora-backtester 时需要
[backtest]
# 历史数据文件路径 (必需)
# CSV格式的K线数据文件
# 文件应包含: timestamp, open, high, low, close, volume
# 可以使用相对路径或绝对路径
data_path = "data/btc_1h.csv"

# 交易对符号 (可选)
# 用于标识和日志输出
# 不影响回测逻辑,仅用于记录
symbol = "BTCUSDT"

# 时间间隔 (可选)
# 标识数据的时间周期
# 如: "1m", "5m", "15m", "1h", "4h", "1d"
# 不影响回测逻辑,仅用于记录
interval = "1h"

# 回测开始时间 (可选)
# 格式: "YYYY-MM-DD" 或 "YYYY-MM-DD HH:MM:SS"
# 如不设置,从数据文件的第一条记录开始
start_time = "2024-01-01"

# 回测结束时间 (可选)
# 格式: "YYYY-MM-DD" 或 "YYYY-MM-DD HH:MM:SS"
# 如不设置,到数据文件的最后一条记录结束
end_time = "2024-12-31"

# ==================== 实时交易配置 ====================
# 只在使用 aurora-live 时需要
[live]
# 交易对符号 (必需)
# 指定要交易的加密货币对
# 格式通常为: 基础货币 + 计价货币
# 示例: "BTCUSDT", "ETHUSDT", "BNBUSDT"
symbol = "ETHUSDT"

# K线时间间隔 (必需)
# 指定接收和处理的K线周期
# 可选值: "1m", "3m", "5m", "15m", "30m", "1h", "2h", "4h", "6h", "8h", "12h", "1d", "3d", "1w", "1M"
# 较短的周期: 更频繁的信号,但可能有更多噪音
# 较长的周期: 更可靠的信号,但反应较慢
# 默认值: "1m"
interval = "5m"

# 是否为模拟交易
# true:  模拟交易(纸上交易),不会发送真实订单
# false: 真实交易,会发送真实订单到交易所 (需要有效的API密钥)
# 默认值: true
# 警告: 设置为false前请确保已充分测试策略
paper_trading = true
